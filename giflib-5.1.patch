diff -urN fbv-1.0b/gif.c fbv-1.0b-patched/gif.c
--- fbv-1.0b/gif.c	2003-08-25 07:23:02.000000000 +1100
+++ fbv-1.0b-patched/gif.c	2014-05-30 22:40:14.837744814 +1100
@@ -31,10 +31,18 @@
 #include <string.h>
 #define min(a,b) ((a) < (b) ? (a) : (b))
 #define gflush return(FH_ERROR_FILE);
+
+#if GIFLIB_MAJOR * 100 + GIFLIB_MINOR >= 501
+#define grflush { DGifCloseFile(gft, NULL); return(FH_ERROR_FORMAT); }
+#define mgrflush { free(lb); free(slb); DGifCloseFile(gft, NULL); return(FH_ERROR_FORMAT); }
+#define agrflush { DGifCloseFile(gft, NULL); return(FH_ERROR_FORMAT); }
+#else
 #define grflush { DGifCloseFile(gft); return(FH_ERROR_FORMAT); }
 #define mgrflush { free(lb); free(slb); DGifCloseFile(gft); return(FH_ERROR_FORMAT); }
-#define agflush return(FH_ERROR_FORMAT);
 #define agrflush { DGifCloseFile(gft); return(FH_ERROR_FORMAT); }
+#endif
+
+#define agflush return(FH_ERROR_FORMAT);
 
 
 int fh_gif_id(char *name)
@@ -81,7 +89,11 @@
     ColorMapObject *cmap;
     int cmaps;
 
+#if GIFLIB_MAJOR >= 5
+    gft=DGifOpenFileName(name, NULL);
+#else
     gft=DGifOpenFileName(name);
+#endif
     if(gft==NULL){printf("err5\n"); gflush;} //////////
     do
     {
@@ -170,7 +182,11 @@
 	}
     }
     while( rt!= TERMINATE_RECORD_TYPE );
+#if GIFLIB_MAJOR * 100 + GIFLIB_MINOR >= 501
+    DGifCloseFile(gft, NULL);
+#else
     DGifCloseFile(gft);
+#endif
     return(FH_ERROR_OK);
 }
 
@@ -184,7 +200,11 @@
     int extcode;
     GifRecordType rt;
 
+#if GIFLIB_MAJOR >= 5
+    gft=DGifOpenFileName(name, NULL);
+#else
     gft=DGifOpenFileName(name);
+#endif
     if(gft==NULL) gflush;
     do
     {
@@ -197,7 +217,11 @@
 		px=gft->Image.Width;
 		py=gft->Image.Height;
 		*x=px; *y=py;
+#if GIFLIB_MAJOR * 100 + GIFLIB_MINOR >= 501
+		DGifCloseFile(gft, NULL);
+#else
 		DGifCloseFile(gft);
+#endif
 		return(FH_ERROR_OK);
 		break;
 	    case EXTENSION_RECORD_TYPE:
@@ -210,7 +234,11 @@
 	}  
     }
     while( rt!= TERMINATE_RECORD_TYPE );
+#if GIFLIB_MAJOR * 100 + GIFLIB_MINOR >= 501
+    DGifCloseFile(gft, NULL);
+#else
     DGifCloseFile(gft);
+#endif
     return(FH_ERROR_FORMAT);
 }
 #endif
